http {
    lua_package_path "/path/to/lua-resty-http/lib/?.lua;;";  # 修改为 resty-http 模块的实际路径

    server {
        listen 80;
        
        location /v2/ {
            access_by_lua_block {
                local http = require "resty.http"
                local cjson = require "cjson"

                local request_uri = ngx.var.request_uri
                
                -- 检查是否是 Docker Registry 的 pull 请求
                if ngx.req.get_method() == "GET" and string.match(request_uri, "^/v2/.+/manifests/.+$") then
                    local image = string.match(request_uri, "^/v2/(.+)/manifests/.+$")
                    local version = string.match(request_uri, "^/v2/.+/manifests/(.+)$")
                    
                    -- 如果匹配成功
                    if image and version then
                        -- 创建 HTTP 客户端实例
                        local httpc = http.new()
                        
                        -- Docker API URL
                        local url = "http://unix:/var/run/docker.sock:/images/create?fromImage=" .. image .. "&tag=" .. version
                        
                        -- 发送请求给 Docker API 拉取镜像
                        local res, err = httpc:request_uri(url, {
                            method = "POST",
                            headers = {
                                ["Content-Type"] = "application/json",
                            }
                        })
                        
                        if not res then
                            ngx.log(ngx.ERR, "Failed to send POST request to Docker API: ", err)
                        else
                            ngx.log(ngx.INFO, "POST request sent to Docker API with response: ", res.body)
                        end
                    end
                end
            }

            proxy_pass http://docker-registry:5000;  # 指向实际的 Docker Registry 服务
        }
    }
}